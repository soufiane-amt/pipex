	int		i;
	char	*line;
	int		path_length;
	i = 0;
		line = ft_substr (env[i], 0, 4);
		path_length = ft_strlen (env[i]);
			free (line);
			return (ft_substr(env[i], 5, path_length));
		free (line);
		i++;
	return (NULL);
	data->path = extract_paths (env);
	data->all_paths = ft_split (data->path, ':');
	int	i;
	i = 0;
	generate_paths(data, env);
	data -> cmd = ft_split (command, ' ');
		data->all_paths[i] = ft_strjoin (data->all_paths[i], "/");
		data->mypath = ft_strjoin (data->all_paths[i], data->cmd[0]);
		execve (data->mypath, data->cmd , env);
		i++;
	data->infile = open (argv[1], O_RDWR, 0777);
		return (2);
	dup2 (data->infile, STDIN_FILENO);
	dup2 (fd[1], STDOUT_FILENO);
	close (fd[0]);
	close (fd[1]);
	exec_cmd (data, argv[2],env);
	return (0);
	t_data	data;
	int		fd[2];
		return (2);
	data.id = fork();
		return (2);
		child_process (&data, argv, env, fd);
	wait (NULL);
	data.outfile = open (argv[4], O_CREAT | O_RDWR, 0777);
		return (1);
	dup2 (data.outfile, STDOUT_FILENO);
	dup2 (fd[0], STDIN_FILENO);
	close (fd[0]);
	close (fd[1]);
	exec_cmd (&data, argv[3], env);
	return (0);
